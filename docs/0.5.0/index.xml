<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Fission on Serverless Functions for Kubernetes</title>
    <link>http://fission.io/docs/0.5.0/</link>
    <description>Recent content in Fission on Serverless Functions for Kubernetes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Fri, 08 Sep 2017 16:26:29 -0700</lastBuildDate>
    
	<atom:link href="http://fission.io/docs/0.5.0/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Upgrading from v0.1 to v0.2.x</title>
      <link>http://fission.io/docs/0.5.0/upgrade/upgrade-from-v0.1/</link>
      <pubDate>Fri, 08 Sep 2017 16:26:29 -0700</pubDate>
      
      <guid>http://fission.io/docs/0.5.0/upgrade/upgrade-from-v0.1/</guid>
      <description>TL;DR The Fission API has changed significantly in this version. The new API is incompatible with the old one. The CLI is compatible; if you wrote scripts using it, those should still work.
Below we describe a tool for migrating your state from your old install to the new one.
While this upgrade is going to be disruptive, we&amp;rsquo;re going to do our best to make sure future upgrades aren&amp;rsquo;t as bad.</description>
    </item>
    
    <item>
      <title>Upgrading from v0.3 to v0.4.x</title>
      <link>http://fission.io/docs/0.5.0/upgrade/upgrade-from-v0.3/</link>
      <pubDate>Sat, 04 Nov 2017 03:38:29 +0800</pubDate>
      
      <guid>http://fission.io/docs/0.5.0/upgrade/upgrade-from-v0.3/</guid>
      <description>Introduction Kubernetes ThirdPartyResources (&amp;ldquo;TPR&amp;rdquo;) are replaced by CustomResourceDefinitions (&amp;ldquo;CRD&amp;rdquo;). TPRs have been deprecated and are removed in Kubernetes 1.8.
Since Fission stores state in TPRs, we need to migrate this state from TPRs to CRDs while upgrading.
Follow the instructions below if you&amp;rsquo;re upgrading a Fission 0.2.1 or 0.3.0 cluster to 0.4. If you&amp;rsquo;re using a pre-0.2 Fission cluster, use the [upgrade guide from 0.1 to 0.2]() and then upgrade to 0.</description>
    </item>
    
    <item>
      <title>Upgrading from v0.4.x to v0.5.0</title>
      <link>http://fission.io/docs/0.5.0/upgrade/upgrade-from-v0.4/</link>
      <pubDate>Thu, 08 Feb 2018 04:40:29 +0800</pubDate>
      
      <guid>http://fission.io/docs/0.5.0/upgrade/upgrade-from-v0.4/</guid>
      <description>How to Upgrade  Get the 0.5.0 CLI Upgrade to Fission 0.5.0  Get the new CLI OS X $ curl -Lo fission https://github.com/fission/fission/releases/download/0.5.0/fission-cli-osx &amp;amp;&amp;amp; chmod +x fission &amp;amp;&amp;amp; sudo mv fission /usr/local/bin/  Linux $ curl -Lo fission https://github.com/fission/fission/releases/download/0.5.0/fission-cli-linux &amp;amp;&amp;amp; chmod +x fission &amp;amp;&amp;amp; sudo mv fission /usr/local/bin/  Windows For Windows, you can use the linux binary on WSL. Or you can download this windows executable: fission.exe</description>
    </item>
    
    <item>
      <title>Access secret/configmap in function</title>
      <link>http://fission.io/docs/0.5.0/tutorial/access-secret-cfgmap-in-function/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://fission.io/docs/0.5.0/tutorial/access-secret-cfgmap-in-function/</guid>
      <description>From fission v0.5.0 and later, functions are able to access Secrets and ConfigMaps specified by users.
Create Secret and ConfigMap You can create Secret and ConfigMap with CLI.
$ kubectl -n default create secret generic foo --from-literal=TEST_KEY=&amp;quot;TESTVALUE&amp;quot; $ kubectl -n default create configmap bar --from-literal=TEST_KEY=TESTVALUE  Or use kubectl create -f &amp;lt;filename.yaml&amp;gt; to create these from a YAML file.
apiVersion: v1 kind: Secret metadata: namespace: default name: foo data: TEST_KEY: VEVTVFZBTFVF # value after base64 encode type: Opaque --- apiVersion: v1 kind: ConfigMap metadata: namespace: default name: bar data: TEST_KEY: TESTVALUE  Access Secret and ConfigMap Since content of Secret and ConfigMap are key-value pairs, functions can access them with following paths:</description>
    </item>
    
    <item>
      <title></title>
      <link>http://fission.io/docs/0.5.0/_header/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://fission.io/docs/0.5.0/_header/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>